Задача 1
Отличия типов виртуализации

*полная  (аппаратная) виртуализация: фундаментальным отличием является исключение надстройки в виде хостовой ОС . В результате чего  апаратые ресурсы используются более 
эффективно. Так же исключаются программные риски и трудозатраты направленные на поддержания работоспособности и безопасности надстройки (Хостовой ОС). 
+ лицензия ОС  в некоторых случаях . +возможно динамическое распределение аппаратных ресурсов  +позволяет запускать любые типы ОС

* паравиртуализация предполагает наличие хостовой ОС поверх которой эмулируются  другие изолированные ОС, которые должны быть модифицируемыми
(поддерживать работу в режиме виртуализации, то есть управление ими гипервизором). Позволяет добиться чуть меньшей эффективности, чем полная виртуализация, 
зато некоторые ресурсы могут быть доступны извне виртуальной машины, например БД

* виртуализация уровня ОС позволяет запускать изолированные и независимые экземпляры того же ядра ОС  Предоставляет наиболее простой процесс создания виртуальной единицы. 
Но ограничивает выбор ядра и не позволяет его мофицировать

Задача 2
•	Высоконагруженная база данных, чувствительная к отказу.—физический сервер
Исключаем риски абстракции ОС и гипервизора. Добиваемся более эффективного использования ресурсов. При использования еще одного сервера в Slave режиме добиваемся оптимальной надежности, вот его можно запихать в конфиг паравиртуализации объединив с системой не сильно нагружающей сеть и шину данных, например лёгонький мониторинг

•	Различные web-приложения. – виртуализация уровня ОС .
Т.к. инфраструктурный конфиг очень схож , требования производительности не так критичны, удобно обслуживать, позволит быстро переезжать куда угодно (надежность + можно легко раскидать по миру)
•	Windows системы для использования бухгалтерским отделом. - паравиртуализация,
наиболее похожа на физическую ОС, сохраняет состояние с которым ВМ была завершена + просто потому что есть  Hyper-V )))

•	Системы, выполняющие высокопроизводительные расчеты на GPU.—физический сервер,
т.к. важно максимально эффективно использовать вычислительные ресурсы


Задача 3
1.	100 виртуальных машин на базе Linux и Windows, общие задачи, нет особых требований. Преимущественно Windows based инфраструктура,
требуется реализация программных балансировщиков нагрузки, репликации данных и автоматизированного механизма создания резервных копий.

Hyper –V из-за простоты поддержки + полное удовлетворение требованием 

2.	Требуется наиболее производительное бесплатное open source решение для виртуализации небольшой (20-30 серверов) инфраструктуры на базе Linux и Windows виртуальных машин.

Xen- из-за стабильное работы при высокой производительности , исключения влияние ВМ друг на друга  

3.	Необходимо бесплатное, максимально совместимое и производительное решение для виртуализации Windows инфраструктуры.

Xen- из-за стабильное работы при высокой производительности , исключения влияние ВМ друг на друга  

4.	Необходимо рабочее окружение для тестирования программного продукта на нескольких дистрибутивах Linux.

КVM т.к. предполагается использовать в основном Linux  и требовании к надежности и стабильности не столь существенны
Так же вполне себе подойдет Docker
 
Задача 4
Проблемы:

Невозможность единого управления ВМ
Меньше стабильность из-за рисков связанных с работой и поддержкой среды (но, зато если сломается, то не все сразу)
Платить за каждое не open source решение
Больше затрат на внедрение

Недостатки:

Больше аппаратных расходов  + более сложно поддерживать. 
сложность и неповоротливость 
Увеличение стоимости поддержки 
Квалификация персонала

Плюсы:

Если сломается, то не все сразу, 
Позволяет наиболее тонко выбрать диапазон поддерживаемых хостовых ОС
Позволяет выбрать разные решения, что позволит снизить стоимость закупки (не забудь посчитать затраты на поддержку и внедрение), 
и не привязывает вас к плюсам и минусам какого-то конкретного продукта
Позволяет делать  гибкие сочетания  платный софт для наиболее важных элементов среды, бесплатный  для вспомогательных сервисов 
Позволяет уменьшить стоимость части серверов






 

